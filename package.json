{
  "name": "use-async-effect2",
  "version": "0.12.2",
  "description": "Asynchronous versions of the `useEffect` and` useCallback` hooks that able to cancel internal code by user requests or component unmounting",
  "main": "lib/use-async-effect.js",
  "scripts": {
    "test": "npm run test:build && mocha-headless-chrome -f test/test.html",
    "test:build": "rollup ./test/src/index.js --file ./test/build/index.js --format iife --config ./test/rollup.config.js",
    "changelog": "auto-changelog -p",
    "version": "npm run changelog  && git add CHANGELOG.md",
    "playground": "npm run playground:build && concurrently --kill-others \"npm run playground:server\" \"npm run playground:watch\"",
    "playground:run": "node playground/build/index.js || true",
    "playground:build": "rollup ./playground/src/index.js --file ./playground/build/index.js --format iife --config ./playground/rollup.config.js",
    "playground:watch": "nodemon --delay 1000ms --watch ./playground/src/ --watch lib/ --exec \\\"npm run playground:build\\\"",
    "playground:server": "browser-sync start --server --index ./playground/index.html --files \"./playground/build/*.*\"",
    "prepublishOnly": "npm run test",
    "postversion": "git push && git push --tags"
  },
  "author": {
    "name": "Dmitriy Mozgovoy",
    "email": "robotshara@gmail.com",
    "url": "http://github.com/DigitalBrainJS/"
  },
  "license": "MIT",
  "keywords": [
    "react",
    "reactjs",
    "hook",
    "hooks",
    "useEffect",
    "useCallback",
    "useAsyncEffect",
    "use-async-effect",
    "async",
    "deepstate",
    "setState",
    "promise",
    "c-promise",
    "cpromise",
    "cancelable",
    "cancellable",
    "p-cancelable",
    "timeout",
    "progress",
    "cancel",
    "abortable",
    "abort",
    "AbortController",
    "AbortSignal",
    "signal",
    "await",
    "wait",
    "promises",
    "generator",
    "co",
    "yield",
    "reject",
    "race",
    "decorator",
    "delay",
    "break",
    "suspending",
    "bluebird",
    "deferred",
    "react",
    "cancellation",
    "aborting",
    "close",
    "closable",
    "pause",
    "task"
  ],
  "repository": "https://github.com/DigitalBrainJS/use-async-effect.git",
  "bugs": {
    "url": "https://github.com/DigitalBrainJS/use-async-effect/issues"
  },
  "typings": "./use-async-effect.d.ts",
  "typescript": {
    "definition": "./use-async-effect.d.ts"
  },
  "auto-changelog": {
    "output": "CHANGELOG.md",
    "unreleased": false,
    "commitLimit": false
  },
  "dependencies": {
    "c-promise2": "^0.13.7",
    "is-equal-objects": "^0.3.0"
  },
  "peerDependencies": {
    "react": ">=16.8.0"
  },
  "devDependencies": {
    "@babel/core": "^7.13.15",
    "@babel/preset-react": "^7.13.13",
    "@rollup/plugin-babel": "^5.3.0",
    "@rollup/plugin-commonjs": "^17.1.0",
    "@rollup/plugin-json": "^4.1.0",
    "@rollup/plugin-node-resolve": "^11.2.1",
    "@rollup/plugin-replace": "^2.4.2",
    "assert": "^2.0.0",
    "auto-changelog": "^2.2.1",
    "browser-sync": "^2.26.14",
    "chai": "^4.3.4",
    "concurrently": "^5.3.0",
    "cp-axios": "^0.3.0",
    "cp-fetch": "^0.3.0",
    "eslint": "^7.24.0",
    "mocha": "^8.3.2",
    "mocha-headless-chrome": "^3.1.0",
    "nodemon": "^2.0.7",
    "prop-types": "^15.7.2",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "react-is": "^17.0.2",
    "rollup": "^2.45.2"
  }
}
